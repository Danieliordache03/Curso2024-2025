# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aA_7cDJnS46kKnLS5uuCGN5_s3QANqk-

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.namespace import OWL, RDF, FOAF
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"resources/data03.rdf", format="xml")
g2.parse(github_storage+"resources/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, 
inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y 
nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo 
en los dos grafos."""

ns = Namespace("http://example.org/")

# Buscamos los familyName y givenName de cada grafo y una vez obtenidos, miramos si coinciden
# Vamos primero con el grafo 1
for s1, p1, o1 in g1.subjects(RDF.type, FOAF.Person):
 family_name_g1 = g1.value(s1, FOAF.familyName)
 given_name_g1 = g1.value(s1, FOAF.nick)
 if family_name_g1 is not None and given_name_g1 is not None:
   # Obtenemos ahora los given y family name del grafo 2 
   for s2, p2, o2 in g2.triples(RDF.type, FOAF.Person):
    family_name_g2 = g2.value(s2, FOAF.familyName)
    given_name_g2 = g2.value(s2, FOAF.nick)
    # Si coinciden lo enlazamos en el grafo 3
    if given_name_g1 == given_name_g2 and family_name_g1 == family_name_g2:
      g3.add((s1, OWL.sameAs, s2))
  

# Mostramos el grafo 3
for s3, p3, o3 in g3:
 print(s3, p3, o3)
